// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("MenuPermissionToMenuUsingMenu", testMenuPermissionToOneMenuUsingMenu)
	t.Run("MenuPermissionToPermissionUsingPermission", testMenuPermissionToOnePermissionUsingPermission)
	t.Run("RoleMenuPermissionToMenuPermissionUsingMenuPermission", testRoleMenuPermissionToOneMenuPermissionUsingMenuPermission)
	t.Run("RoleMenuPermissionToRoleUsingRole", testRoleMenuPermissionToOneRoleUsingRole)
	t.Run("UserToRoleUsingRole", testUserToOneRoleUsingRole)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("MenuPermissionToRoleMenuPermissions", testMenuPermissionToManyRoleMenuPermissions)
	t.Run("MenuToMenuPermissions", testMenuToManyMenuPermissions)
	t.Run("PermissionToMenuPermissions", testPermissionToManyMenuPermissions)
	t.Run("RoleToRoleMenuPermissions", testRoleToManyRoleMenuPermissions)
	t.Run("RoleToUsers", testRoleToManyUsers)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("MenuPermissionToMenuUsingMenuPermissions", testMenuPermissionToOneSetOpMenuUsingMenu)
	t.Run("MenuPermissionToPermissionUsingMenuPermissions", testMenuPermissionToOneSetOpPermissionUsingPermission)
	t.Run("RoleMenuPermissionToMenuPermissionUsingRoleMenuPermissions", testRoleMenuPermissionToOneSetOpMenuPermissionUsingMenuPermission)
	t.Run("RoleMenuPermissionToRoleUsingRoleMenuPermissions", testRoleMenuPermissionToOneSetOpRoleUsingRole)
	t.Run("UserToRoleUsingUsers", testUserToOneSetOpRoleUsingRole)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("MenuPermissionToMenuUsingMenuPermissions", testMenuPermissionToOneRemoveOpMenuUsingMenu)
	t.Run("MenuPermissionToPermissionUsingMenuPermissions", testMenuPermissionToOneRemoveOpPermissionUsingPermission)
	t.Run("RoleMenuPermissionToMenuPermissionUsingRoleMenuPermissions", testRoleMenuPermissionToOneRemoveOpMenuPermissionUsingMenuPermission)
	t.Run("RoleMenuPermissionToRoleUsingRoleMenuPermissions", testRoleMenuPermissionToOneRemoveOpRoleUsingRole)
	t.Run("UserToRoleUsingUsers", testUserToOneRemoveOpRoleUsingRole)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("MenuPermissionToRoleMenuPermissions", testMenuPermissionToManyAddOpRoleMenuPermissions)
	t.Run("MenuToMenuPermissions", testMenuToManyAddOpMenuPermissions)
	t.Run("PermissionToMenuPermissions", testPermissionToManyAddOpMenuPermissions)
	t.Run("RoleToRoleMenuPermissions", testRoleToManyAddOpRoleMenuPermissions)
	t.Run("RoleToUsers", testRoleToManyAddOpUsers)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("MenuPermissionToRoleMenuPermissions", testMenuPermissionToManySetOpRoleMenuPermissions)
	t.Run("MenuToMenuPermissions", testMenuToManySetOpMenuPermissions)
	t.Run("PermissionToMenuPermissions", testPermissionToManySetOpMenuPermissions)
	t.Run("RoleToRoleMenuPermissions", testRoleToManySetOpRoleMenuPermissions)
	t.Run("RoleToUsers", testRoleToManySetOpUsers)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("MenuPermissionToRoleMenuPermissions", testMenuPermissionToManyRemoveOpRoleMenuPermissions)
	t.Run("MenuToMenuPermissions", testMenuToManyRemoveOpMenuPermissions)
	t.Run("PermissionToMenuPermissions", testPermissionToManyRemoveOpMenuPermissions)
	t.Run("RoleToRoleMenuPermissions", testRoleToManyRemoveOpRoleMenuPermissions)
	t.Run("RoleToUsers", testRoleToManyRemoveOpUsers)
}
